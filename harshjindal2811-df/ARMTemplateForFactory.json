{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "harshjindal2811-df"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureDataLakeStorageForCustomer_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageForCustomer'"
		},
		"SqlServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azureprojectharsh.dfs.core.windows.net/"
		},
		"AzureDataLakeStorageForCustomer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azureprojectharsh.dfs.core.windows.net/"
		},
		"RestCountriesAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/name/"
		},
		"SqlServer_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "HARSHJINDAL\\SQLEXPRESS"
		},
		"SqlServer_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "harsh"
		},
		"SqlServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Harsh"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyCustomerPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetCustomerCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select count(1) as row_count from dbo.customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sql_CustomerProduct",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": ".",
									"table_name": "."
								}
							}
						}
					},
					{
						"name": "IfMoreThan500",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetCustomerCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('GetCustomerCount').output.firstRow.row_count, 500)\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SendEmailAlert",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"url": "https://prod-29.eastus2.logic.azure.com:443/workflows/031acfccbe844a64b11803590773ff4f/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=U7znYr4a2JS-VkSg5IAZBQOGTXChWafT5YJGRrBTqIs",
										"body": {
											"to": "harshjindal2811@gmail.com",
											"subject": "ADF Alert: Customer count too low",
											"body": "Customer record count is â‰¤ 500. Pipeline skipped data copy."
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "CopyCustomerData",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "sql_CustomerProduct",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "dbo",
												"table_name": "customer"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adls_CustomerProduct",
											"type": "DatasetReference",
											"parameters": {
												"container": "destination",
												"folder_name": "customer",
												"file_name": "customer.json"
											}
										}
									]
								},
								{
									"name": "LogPipelineRunSuccess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyCustomerData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[LogPipelineRun]",
										"storedProcedureParameters": {
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordCount": {
												"value": {
													"value": "@activity('CopyCustomerData').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"RunTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@activity('CopyCustomerData').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlServer",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "RunProducPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetCustomerCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyProductPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"customerCount": {
									"value": "@activity('GetCustomerCount').output.firstRow.row_count",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-09T04:34:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_CustomerProduct')]",
				"[concat(variables('factoryId'), '/pipelines/CopyProductPipeline')]",
				"[concat(variables('factoryId'), '/datasets/adls_CustomerProduct')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyProductPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IfMoreThan600",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(pipeline().parameters.customerCount,600)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyProduct",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "sql_CustomerProduct",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "dbo",
												"table_name": "product"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adls_CustomerProduct",
											"type": "DatasetReference",
											"parameters": {
												"container": "destination",
												"folder_name": "product",
												"file_name": "product.json"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"customerCount": {
						"type": "int"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-08T12:02:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_CustomerProduct')]",
				"[concat(variables('factoryId'), '/datasets/adls_CustomerProduct')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CountryRESTToJSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachCountry",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SetCountryList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('CountryList')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyCountryData",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "rest_country",
											"type": "DatasetReference",
											"parameters": {
												"country": "@item()"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "json_output",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@concat(item(), '.json')"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "SetCountryList",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CountryList",
							"value": [
								"india",
								"us",
								"uk",
								"china",
								"russia"
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountryList": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-08T04:13:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rest_country')]",
				"[concat(variables('factoryId'), '/datasets/json_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_CustomerProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageForCustomer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageForCustomer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "countries",
						"fileSystem": "destination"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestCountriesAPI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"country": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().country",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestCountriesAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_CustomerProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageForCustomer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageForCustomer_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageForCustomer_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestCountriesAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('RestCountriesAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwiceDailyTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CountryRESTToJSON",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-07-08T00:30:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								0,
								12
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CountryRESTToJSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}